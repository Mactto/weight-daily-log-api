image: python:3.10-bullseye

stages:
  - build
  - test
  - deploy


variables:
  XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache"

cache:
    key:
      files:
        - pyproject.toml
        - requirements-dev.txt
    paths:
      - .cache/pip/

.prepare-venv-template: &prepare-venv
  # install project dependencies
  # we cannot use wheel cache if we use hash checking
  # reference: https://pip.pypa.io/en/stable/reference/pip_install/#wheel-cache
  - python -m venv python-env
  - source ./python-env/bin/activate
  - pip install -U pip setuptools wheel
  - pip install --no-deps -r requirements-dev.txt
  - deactivate


build-job:
  stage: build
  script:
    - *prepare-venv

    - source ./python-env/bin/activate
    # https://pyup.io/v/51668/f17/
    # https://github.com/sqlalchemy/sqlalchemy/pull/8563
    - safety check -i 51668

    - black --check launcher.py app/ migration/ tests/
    - flake8 launcher.py app/ tests/
    - bandit -ll -r app
    - mypy launcher.py app/ tests/

    - python -m build --sdist

  artifacts:
    paths:
      - dist/
    expire_in: 1 days


test-unit-job:
  stage: test
  services:
  - name: postgres:13-alpine
    alias: ci-service-postgres
    command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
  variables:
    POSTGRES_DB: example
    POSTGRES_USER: elice
    POSTGRES_PASSWORD: devpassword
    APP_DB_URI: postgresql+asyncpg://elice:devpassword@ci-service-postgres:5432/example
  before_script:
    - *prepare-venv
  script:
    - source ./python-env/bin/activate
    - pytest --cov-report term
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - htmlcov/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    expire_in: 1 days


deploy-review-job:
  stage: deploy
  cache: {}
  image: elice/azcopy:10.14.1
  script:
    - mkdir -p _htmlcov/$CI_COMMIT_REF_SLUG
    - mv htmlcov/* _htmlcov/$CI_COMMIT_REF_SLUG/
    - azcopy cp _htmlcov/$CI_COMMIT_REF_SLUG "https://$COVREPORT_STORAGE_HOSTNAME/covreport/$CI_PROJECT_ID$COVREPORT_STORAGE_SAS"
        --recursive=true --overwrite=true
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$COVREPORT_WEB_HOSTNAME/$CI_PROJECT_ID/$CI_COMMIT_REF_SLUG/index.html
  except:
    - tags

deploy-docker-job:
  stage: deploy
  cache: {}
  image: docker:20.10
  services:
  - name: docker:20.10-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: /certs
  before_script:
    - docker info
  script:
    - SDIST_FILENAME=$(find dist -type f -name "*.tar.gz")
    - echo $SDIST_FILENAME
    - DOCKER_IMAGE_NAME=$CI_REGISTRY_HOSTNAME/gitlab-ci-build/$CI_PROJECT_NAME:$CI_COMMIT_TAG
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY_HOSTNAME -u $CI_REGISTRY_USERNAME --password-stdin
    - docker build --build-arg SDIST_FILENAME=$SDIST_FILENAME -t $DOCKER_IMAGE_NAME .
    - docker push $DOCKER_IMAGE_NAME
  only:
    - tags
